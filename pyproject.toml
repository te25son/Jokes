[tool.poetry]
name = "jokes"
version = "0.1.0"
description = "Little CLI for telling jokes."
authors = ["te25son <te25son@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.23.0"
click = "^8.1.3"
python-dotenv = "^0.20.0"
pydantic = "^1.9.1"

[tool.poetry.scripts]
jokes = "jokes.app:jokes"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-httpx = "^0.21.1"
nox = "^2022.8.7"
black = "^22.10.0"
pytest-cov = "^4.0.0"
pydantic-factories = "^1.13.0"
ruff = "^0.0.254"
mypy = "^1.1.1"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["jokes"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = ["if TYPE_CHECKING:"]

[tool.mypy]
strict = true
disallow_untyped_decorators = false
disallow_subclassing_any = false
warn_return_any = false
warn_unused_ignores = true

[tool.black]
line-length = 120

[tool.ruff]
exclude = ["__init__.py"]
fix = true
ignore = ["E731"]
line-length = 120
select = [
    "C",
    "F", # Pyflakes
    "I", # Isort
    "W", # Warning
    "B", # Flake8-Bugbear
]

[tool.ruff.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5

[tool.ruff.isort]
order-by-type = true
force-single-line = false
known-first-party = ["jokes"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
